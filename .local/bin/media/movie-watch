#!/bin/bash

# Define the directory containing media files
movie_dir="$HOME/Data/Media/Movies"
show_dir="$HOME/Data/Media/Shows"
music_dir="$HOME/Data/Media/Music"

# Check if fuzzel and mpv are installed
command -v fuzzel >/dev/null 2>&1 || { echo >&2 "fuzzel is required but not installed. Aborting."; exit 1; }
command -v mpv >/dev/null 2>&1 || { echo >&2 "mpv is required but not installed. Aborting."; exit 1; }

cho=$(printf "Movie\nShow\nMusic\nkillMPV" | fuzzel --dmenu --prompt "Select what to watch: ")

# Select what to watch
case "$cho" in 
 Movie)  media_dir=$movie_dir ;;
 Show)  media_dir=$show_dir ;;
 Music) media_dir=$music_dir ;;
 killMPV) killall mpv && exit 0;;
 *) notify-send "Sorry, option not found ðŸ’”ðŸ’”ðŸ’”" && exit 0 ;;
esac

# Ensure the media directory is set or not
if [ -z "$media_dir" ]; then
    notify-send "No media directory selected." && exit 1
fi

# Find media files and use fuzzel to select one
media_files=$(find "$media_dir" -type f \( -iname "*.mp4" -o -iname "*.m4a" -o -iname "*.ogg" -o -iname "*.mov" -o -iname "*.mkv" -o -iname "*.wav" -o -iname "*.ape" -o -iname "*.avi" -o -iname "*.mp3" -o -iname "*.flac" \) | sed "s|^$media_dir/||" )
selected_file=$(echo "$media_files" | sed 's|^\./||' | fuzzel --dmenu --prompt "Select a media file:")

# Check if the user selected a file
if [ -n "$selected_file" ]; then
    # Use mpv to play the selected file
    mpv --loop  "$media_dir/$selected_file"
else
    notify-send "No file selected."
fi
